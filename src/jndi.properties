#java.naming.security.principal=system
#java.naming.security.credentials=manager

#java.naming.security.principal=admin
#java.naming.security.credentials=admin



## From: http://activemq.apache.org/jndi-support.html
## ActiveMQ does not provide a full JNDI server. This means JMS clients
## need to use properties files to create a JNDI IntialContextFactory.
## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
## 
## http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# START SNIPPET: jndi

# Set the initial context factory class
# (Points to class in activemq-all-5.15.0.jar)
java.naming.factory.initial = org.apache.activemq.jndi.ActiveMQInitialContextFactory

# Set JMS provider URL to connect to JMS server
# use the following property to configure the default connector
# ref:http://activemq.apache.org/uri-protocols.html
java.naming.provider.url = tcp://192.168.56.6:61616
# (tcp: Client connects to the broker at the given URL)


# Configure JMS-administered objects (Connection Factories, and Destinations
# (Topics/Queues))...
############################################################################

# use the following property to specify the JNDI name the connection factory should appear as. 
# connectionFactoryNames = connectionFactory, queueConnectionFactory, topicConnectionFactory
connectionFactoryNames = OttoActiveMQTopicConnectionFactory

# register some queues as JNDI names in JNDI using the form
# queue.[jndiName] = [physicalName]
#queue.MyQueue = example.MyQueue


# register some topics as JNDI names in JNDI using the form:
# topic.[jndiName] = [physicalName]
# (ActiveMQInitialContextFactory looks for properties begining with "topic.")
topic.testTopic = Otto.ActiveMQ.Topic.Test.1

# END SNIPPET: jndi
